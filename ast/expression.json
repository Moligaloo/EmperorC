[
    {
        "body": [
            {
                "statement": "expression",
                "expression": {
                    "type": "variable",
                    "value": "a"
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "string",
                    "value": "hello"
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "integer",
                    "value": 123
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "call",
                    "function": {
                        "subscript": {
                            "type": "integer",
                            "value": 0
                        },
                        "type": "subscript",
                        "ref": {
                            "member": "c",
                            "type": "arrow",
                            "ref": {
                                "member": "b",
                                "type": "dot",
                                "ref": {
                                    "type": "variable",
                                    "value": "a"
                                }
                            }
                        }
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "post_increment",
                    "ref": {
                        "type": "variable",
                        "value": "i"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "post_decrement",
                    "ref": {
                        "type": "variable",
                        "value": "j"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "pre_increment",
                    "expression": {
                        "type": "variable",
                        "value": "x"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "pre_decrement",
                    "expression": {
                        "type": "variable",
                        "value": "x"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "negate",
                    "expression": {
                        "type": "variable",
                        "value": "x"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "integer",
                    "value": -1
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "not",
                    "expression": {
                        "type": "variable",
                        "value": "a"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "expression": {
                        "type": "variable",
                        "value": "x"
                    },
                    "type": "cast",
                    "cast": "int"
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "deref",
                    "expression": {
                        "type": "variable",
                        "value": "a"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "addr",
                    "expression": {
                        "type": "variable",
                        "value": "var"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "sizeof",
                    "expression": {
                        "type": "variable",
                        "value": "a"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "type": "sizeof",
                    "vartype": "int"
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "left": {
                            "type": "variable",
                            "value": "a"
                        },
                        "type": "multiply",
                        "right": {
                            "type": "variable",
                            "value": "b"
                        }
                    },
                    "type": "modular",
                    "right": {
                        "type": "variable",
                        "value": "c"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "left": {
                            "type": "variable",
                            "value": "x"
                        },
                        "type": "modular",
                        "right": {
                            "type": "variable",
                            "value": "y"
                        }
                    },
                    "type": "multiply",
                    "right": {
                        "type": "variable",
                        "value": "z"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "a"
                    },
                    "type": "modular",
                    "right": {
                        "type": "variable",
                        "value": "b"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "left": {
                            "type": "variable",
                            "value": "a"
                        },
                        "type": "add",
                        "right": {
                            "left": {
                                "type": "variable",
                                "value": "b"
                            },
                            "type": "multiply",
                            "right": {
                                "type": "variable",
                                "value": "c"
                            }
                        }
                    },
                    "type": "subtract",
                    "right": {
                        "type": "variable",
                        "value": "d"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "a"
                    },
                    "type": "left_shift",
                    "right": {
                        "type": "integer",
                        "value": 2
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "left": {
                            "type": "variable",
                            "value": "a"
                        },
                        "type": "add",
                        "right": {
                            "type": "integer",
                            "value": 1
                        }
                    },
                    "type": "right_shift",
                    "right": {
                        "type": "integer",
                        "value": 3
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "i"
                    },
                    "type": "less",
                    "right": {
                        "left": {
                            "type": "variable",
                            "value": "a"
                        },
                        "type": "add",
                        "right": {
                            "type": "variable",
                            "value": "b"
                        }
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "j"
                    },
                    "type": "greater_equal",
                    "right": {
                        "type": "variable",
                        "value": "a"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "a"
                    },
                    "type": "equal",
                    "right": {
                        "type": "variable",
                        "value": "b"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "c"
                    },
                    "type": "not_equal",
                    "right": {
                        "type": "variable",
                        "value": "d"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "left": {
                            "type": "variable",
                            "value": "a"
                        },
                        "type": "bitwise_and",
                        "right": {
                            "type": "variable",
                            "value": "b"
                        }
                    },
                    "type": "bitwise_and",
                    "right": {
                        "type": "variable",
                        "value": "c"
                    }
                }
            },
            {
                "statement": "expression",
                "expression": {
                    "left": {
                        "type": "variable",
                        "value": "a"
                    },
                    "type": "bitwise_xor",
                    "right": {
                        "type": "variable",
                        "value": "b"
                    }
                }
            }
        ],
        "parameters": [
            {
                "type": "int",
                "name": "argc"
            },
            {
                "stars": "**",
                "name": "argv",
                "type": "char"
            }
        ],
        "name": "main",
        "definition": "function",
        "return_type": "int"
    }
]
